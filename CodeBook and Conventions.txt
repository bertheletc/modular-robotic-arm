A REVIEW OF GOOD CODING PRACTICE:

1. OBEY DEPENDENCIES STRICTLY
2. EXTRA SUB FUNCTIONS ARE OKAY, BUT PUT THEM NEAR WHERE THEY ARE USED FOR READABILITY
3. GOOD VARIABLE NAMES LEADS TO LESS CONFUSION




COMMANDS

---------------------------------------------------------

List of Console Commands:

1. Link
	Called by the prefix `Link'
2. Arm
	Called by the prefix `Arm'
3. Record
	Called by the prefix `Wait'
4. Open
	Called by the prefix `Open'
5. Close
	Called by the prefix `Close'
6. Run
	Called by the prefix `Run'
7. Calibrate
	called by the prefix `Calibrate'
8. Detect
	called by the prefix `Detect'

---------------------------------------------------------
Link

Executes a movement for 1 link specified by the input. Input formats detailed below. Inputs
not matching the formats should fail gracefully (print error, go back to console). See below 
conventions for interpreting relative and absolute position:

Link Link# Value
	Link# indicates the target link that we want to actuate. e.g. Link#=1 indicates we
	are to move the bottom linkage.
	
	Value indicates the # of degrees that we want to move the arm left or right. Value
	is allowed to be negative!

Link Link# Value -abs
	Link# is the same as above

	With the optional flag -abs, Value is now interpreted as the absolute position to go
	to.

---------------------------------------------------------
Arm

Executes a movement for the entire arm. Input format detailed below. Inputs not matching the
formats shoudld fail gracefully (print error, go back to console). See below conventions for
interpreting relative and absolute position.

Arm List-Of-Numbers
	List-Of-Nubmers is a list of numbers seperated by spaces. Length of list is equal to
	size of arm. Reject the input if the length is different. Moves each linkage by the
	amount specified in the list (relative position)

Arm List-Of-Numbers -abs
	With optional flag -abs, the values are now used as absolute position.

---------------------------------------------------------
Record

Records the current status of the arm, or records waits (meaning pause in motion). Saves data
to the open file, throws error if file does not exist. Must follow data recording convention 
noted below.

Record
	Records all the positions of the arm.

Record Wait Time
	Records a wait in the control sequence of length Time in milliseconds.

---------------------------------------------------------
Open

Opens a file. Must be able to recognize proper input refuse to open non-csv files), and fail
gracefully when unable to locate the specified file. Must also check to see if there is already
a file open- rejects input if this is the case.

Open FilePath
	FilePath is the path to the desired file. If the file does not exist, create it. If it
	does exist, must prompt user to choose to overwrite, or append to it.

---------------------------------------------------------
Close

Closes the currently open file. Fails gracefully if no file is currently open. Input should be
just the word Close, and nothing else. Reject input if it does not match.

Close

---------------------------------------------------------
Run

Runs the currently open file or runs the saved file at the specified path (okay to run even
if there is an open file). By Run, we mean that it goes through the recorded path specified
by the file. Blocks all standard user console commands while executing file, but has emergency
abort command/function.

Run
	Runs the currently open file. Fail gracefully if nothing open. Should prompt user
	to run `help' when failing.
Run path
	Run the file at path. Fail gracefully if file is wrong format, invalid input for
	current arm configuration (e.g. file is for a 4-link arm, but currently only have
	2 links), and if file does not exist.

---------------------------------------------------------
Calibrate

Calibrates the linkages' various encoder positions. Can either calibrate all the links, or just
specific links.

Calibrate linkNumber
	Forces the linkNumber-th link to calibrate. Disables operation until calibration is
	complete. Must fail gracefully if linkNumber is out of range.

Calibrate -all
	Keyword -all changes the behavior to calibrate all the linkages along the arm (one at a
	time!). Disables all other operations until calibration is complete. Should prompt user
	with a warning that this operation may take a while before continuing with execution
	(should have the ability to back out of the operation at this prompt).


---------------------------------------------------------
Detect

Detects which linkages are on the arm. Prints out the list of linkage's i2c addressess in
order of linkage position. Input must match exactly. Saves the detected positions to the
internal position tracker.

Detect

---------------------------------------------------------



INTERNAL VARIABLES



---------------------------------------------------------
For a full list and description of the persistent internal variables, consult the armObj
doc-string. ALL PERSISTENT INTERNAL VARIABLES MUST BE OBJECT VARIABLES. DO NOT USE ANY GLOBAL
VARIABLES.

---------------------------------------------------------



CONVENTIONS



---------------------------------------------------------
Relative and Absolute Position convention

All motion is in units of degrees. 0 degrees absolute is treated as pointing straight (no 
deviation from center). Giving negative relative input means to turn the other way.

---------------------------------------------------------
Data recording convention

All data that is recorded and read by the arm are in .csv format. Rows in the file are comma 
delimited, and represent a single arm state. Meaning, each row contains as many elements as
there are linkages in the arm with 1 exception explained below. Each element is the encoder
reading of the target position, and the element's index indicates the corresponding linkage's
position on the arm (first element = bottom linkage)

The one exception to when the number of rows = number of elements is on `waits', i.e. when the
arm is told to wait at a position for some time. This will be marked by having the first
element be the keyword "WAIT" followed by exactly one more element in that row (row is of size
two exactly). The second element indicates the amount of time to wait in milliseconds.

---------------------------------------------------------



ARDUINO COMMUNICATION PROTOCOL
-Protocol
-Codebook


---------------------------------------------------------




